/*
Given S, a sequence of n integers i.e. S = s1, s2, ..., sn. Compute if it is possible to split S into two parts : s1, s2, ..., si and si+1, si+2, â€¦.., sn (0 <= i <= n) in such a way that the first part is strictly decreasing while the second is strictly increasing one.
*/
#include <iostream>

using namespace std;

int main()
{
    int n;
    cin >> n;
    bool isDec = 1;
    int change = 0;
    int previous = 0, current = 0, flag = 1;
    cin >> previous;
    for (int i = 1; i < n; i++)
    {
        cin >> current;
        if (previous == current)
        {
        	cout << "false";
            flag = 0;
            break;
        }
        else if (current < previous && isDec == 0)
        {
			change ++;
            isDec = 1;
        }
        else if (current > previous && isDec == 1)
        {
            change ++;
            isDec = 0;
        }
        previous = current;
    }
    if (change >= 2)
    {
        cout << "false";
    }
    else if(change < 2 && flag != 0)
    {
        cout << "true";
    }
}
